# application.properties

server.address=0.0.0.0
server.port=8443
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=keystorepassword
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=mycert

server.servlet.context-parameters.strict-transport-security=max-age=31536000; includeSubDomains; preload



#Whether core threads are allowed to time out. This enables dynamic 

# growing and shrinking of the pool.
# spring.task.execution.pool.allow-core-thread-timeout=true

#Core number of threads.
# spring.task.execution.pool.core-size=8

#Time limit for which threads may remain idle before being terminated.
spring.task.execution.pool.keep-alive=5s

#Maximum allowed number of threads. If tasks are filling up the queue, the pool can expand up to that size to accommodate the load. Ignored if the queue is unbounded.
# spring.task.execution.pool.max-size=

#Queue capacity. An unbounded capacity does not increase the pool and therefore ignores the "max-size" property.
# spring.task.execution.pool.queue-capacity=

#Whether the executor should wait for scheduled tasks to complete on shutdown.
# spring.task.execution.shutdown.await-termination=false

#Maximum time the executor should wait for remaining tasks to complete.
# spring.task.execution.shutdown.await-termination-period=

#Prefix to use for the names of newly created threads.
# spring.task.execution.thread-name-prefix=task-

#Maximum allowed number of threads.
# spring.task.scheduling.pool.size=1

#Whether the executor should wait for scheduled tasks to complete on shutdown.
# spring.task.scheduling.shutdown.await-termination=false

#Maximum time the executor should wait for remaining tasks to complete.
# spring.task.scheduling.shutdown.await-termination-period

#Prefix to use for the names of newly created threads.
# spring.task.scheduling.thread-name-prefix=scheduling-